Index: Presenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.sql.*;\r\n//import java.util.Scanner;     //Testing Purposes reading input without UI\r\n\r\nimport javax.swing.JTextField;\r\n\r\npublic class Presenter {\r\n    Model model; // create a model inside presenter\r\n    SplashScreen splash; // create a splash screen inside presenter\r\n    PlayerEntry playerEntry;\r\n\r\n    // constructor will initialize the model and each view\r\n    Presenter() {\r\n\r\n        splash = new SplashScreen(); // load splash screen\r\n        model = new Model(); // load model\r\n        playerEntry = new PlayerEntry(this); // Load player entry screen with this as paramater\r\n\r\n    }\r\n\r\n    public void startApp() {\r\n        splash.showSplash();\r\n        // displaying splash for 3 seconds before we move on\r\n        try {\r\n            Thread.sleep(1000); // I believe this makes the main thread wait 3 seconds\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            System.exit(1);\r\n        }\r\n        splash.hideSplash();\r\n        playerEntry.showPlayerEntry();\r\n    }\r\n\r\n    public void startGame() { // after the players are entered and the start button is pressed\r\n        playerEntry.hidePlayerEntry();\r\n        try {\r\n            model.connection.close();\r\n            System.exit(1);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        // gameScreen.show()\r\n        // model.runGame()\r\n    }\r\n\r\n    void update() {\r\n        // doesn't look like anything needs to be constantly updated since\r\n    }\r\n\r\n    public int searchDataBaseForPlayer(JTextField id_field, JTextField codename_field) {\r\n        // Checks if the id is only digits\r\n        if (id_field.getText().matches(\"\\\\d+\")) {\r\n            if (!model.idList.contains(id_field.getText())) // Checks if the id is already in use\r\n            {\r\n                model.idList.add(id_field.getText());\r\n                id_field.setEnabled(false);\r\n                // if codename exists at the input ID, return true\r\n                if (model.Search(id_field.getText())) {\r\n                    codename_field.setText(model.getCodeName()); // set the corresponding codename to the codename\r\n                                                                 // matching id\r\n                    codename_field.setEnabled(false); // make the codename field uneditable\r\n                    return 0;\r\n                } else {\r\n                    return 1; // Codename not present, initiates request for a new one from user\r\n                }\r\n            } else {\r\n                return 2; // ID is already in use. Prompts for a new entry\r\n            }\r\n        } else {\r\n            return 3; // ID is a non integer. Prompts for a new entry\r\n        }\r\n\r\n    }\r\n\r\n    public Boolean addCodeName(JTextField id_field, JTextField codename_field) {\r\n        if (codename_field.getText().matches(\"^[a-zA-Z]+$\")) {\r\n            model.addCodeName(id_field.getText(), codename_field.getText());\r\n            codename_field.setEnabled(false); // make the codename field uneditable\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    void kill() { // exit game button or something can call this\r\n        System.exit(1);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Presenter.java b/Presenter.java
--- a/Presenter.java	(revision 4f616f1f42932e6bd445329f4bbe25039f55335a)
+++ b/Presenter.java	(date 1666565307089)
@@ -21,7 +21,7 @@
         splash.showSplash();
         // displaying splash for 3 seconds before we move on
         try {
-            Thread.sleep(1000); // I believe this makes the main thread wait 3 seconds
+            Thread.sleep(3000); // I believe this makes the main thread wait 3 seconds
         } catch (Exception e) {
             e.printStackTrace();
             System.exit(1);
Index: build.bash
===================================================================
diff --git a/build.bash b/build.bash
deleted file mode 100644
--- a/build.bash	(revision 4f616f1f42932e6bd445329f4bbe25039f55335a)
+++ /dev/null	(revision 4f616f1f42932e6bd445329f4bbe25039f55335a)
@@ -1,4 +0,0 @@
-#!/bin/bash
-set -u -e
-javac -cp .:postgresql-42.5.0.jar LaserTag.java Presenter.java Model.java SplashScreen.java PlayerEntry.java
-java -cp .:./postgresql-42.5.0.jar LaserTag
\ No newline at end of file
